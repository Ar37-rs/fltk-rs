/* automatically generated by rust-bindgen */

#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct Fl_Output {
    _unused: [u8; 0],
}
extern "C" {
    pub fn Fl_Output_new(
        x: libc::c_int,
        y: libc::c_int,
        width: libc::c_int,
        height: libc::c_int,
        title: *const libc::c_char,
    ) -> *mut Fl_Output;
}
extern "C" {
    pub fn Fl_Output_set_label(arg1: *mut Fl_Output, title: *const libc::c_char);
}
extern "C" {
    pub fn Fl_Output_redraw(arg1: *mut Fl_Output);
}
extern "C" {
    pub fn Fl_Output_show(arg1: *mut Fl_Output);
}
extern "C" {
    pub fn Fl_Output_hide(arg1: *mut Fl_Output);
}
extern "C" {
    pub fn Fl_Output_activate(arg1: *mut Fl_Output);
}
extern "C" {
    pub fn Fl_Output_deactivate(arg1: *mut Fl_Output);
}
extern "C" {
    pub fn Fl_Output_redraw_label(arg1: *mut Fl_Output);
}
extern "C" {
    pub fn Fl_Output_resize(
        arg1: *mut Fl_Output,
        x: libc::c_int,
        y: libc::c_int,
        width: libc::c_int,
        height: libc::c_int,
    );
}
extern "C" {
    pub fn Fl_Output_tooltip(arg1: *mut Fl_Output) -> *const libc::c_char;
}
extern "C" {
    pub fn Fl_Output_set_tooltip(arg1: *mut Fl_Output, txt: *const libc::c_char);
}
extern "C" {
    pub fn Fl_Output_get_type(arg1: *mut Fl_Output) -> libc::c_int;
}
extern "C" {
    pub fn Fl_Output_set_type(arg1: *mut Fl_Output, typ: libc::c_int);
}
extern "C" {
    pub fn Fl_Output_color(arg1: *mut Fl_Output) -> libc::c_int;
}
extern "C" {
    pub fn Fl_Output_set_color(arg1: *mut Fl_Output, color: libc::c_int);
}
extern "C" {
    pub fn Fl_Output_label_color(arg1: *mut Fl_Output) -> libc::c_int;
}
extern "C" {
    pub fn Fl_Output_set_label_color(arg1: *mut Fl_Output, color: libc::c_int);
}
extern "C" {
    pub fn Fl_Output_label_font(arg1: *mut Fl_Output) -> libc::c_int;
}
extern "C" {
    pub fn Fl_Output_set_label_font(arg1: *mut Fl_Output, font: libc::c_int);
}
extern "C" {
    pub fn Fl_Output_label_size(arg1: *mut Fl_Output) -> libc::c_int;
}
extern "C" {
    pub fn Fl_Output_set_label_size(arg1: *mut Fl_Output, sz: libc::c_int);
}
extern "C" {
    pub fn Fl_Output_label_type(arg1: *mut Fl_Output) -> libc::c_int;
}
extern "C" {
    pub fn Fl_Output_set_label_type(arg1: *mut Fl_Output, typ: libc::c_int);
}
extern "C" {
    pub fn Fl_Output_box(arg1: *mut Fl_Output) -> libc::c_int;
}
extern "C" {
    pub fn Fl_Output_set_box(arg1: *mut Fl_Output, typ: libc::c_int);
}
extern "C" {
    pub fn Fl_Output_set_value(
        arg1: *mut Fl_Output,
        arg2: *const libc::c_char,
    ) -> libc::c_int;
}
extern "C" {
    pub fn Fl_Output_value(arg1: *mut Fl_Output) -> *const libc::c_char;
}
extern "C" {
    pub fn Fl_Output_maximum_size(arg1: *mut Fl_Output) -> libc::c_int;
}
extern "C" {
    pub fn Fl_Output_set_maximum_size(arg1: *mut Fl_Output, m: libc::c_int);
}
extern "C" {
    pub fn Fl_Output_position(arg1: *mut Fl_Output) -> libc::c_int;
}
extern "C" {
    pub fn Fl_Output_set_position(
        arg1: *mut Fl_Output,
        p: libc::c_int,
    ) -> libc::c_int;
}
extern "C" {
    pub fn Fl_Output_set_mark(
        arg1: *mut Fl_Output,
        m: libc::c_int,
    ) -> libc::c_int;
}
extern "C" {
    pub fn Fl_Output_mark(arg1: *mut Fl_Output) -> libc::c_int;
}
extern "C" {
    pub fn Fl_Output_replace(
        arg1: *mut Fl_Output,
        b: libc::c_int,
        e: libc::c_int,
        text: *const libc::c_char,
        ilen: libc::c_int,
    ) -> libc::c_int;
}
extern "C" {
    pub fn Fl_Output_insert(
        arg1: *mut Fl_Output,
        t: *const libc::c_char,
        l: libc::c_int,
    ) -> libc::c_int;
}
extern "C" {
    pub fn Fl_Output_append(
        arg1: *mut Fl_Output,
        t: *const libc::c_char,
        l: libc::c_int,
        keep_selection: libc::c_char,
    ) -> libc::c_int;
}
extern "C" {
    pub fn Fl_Output_copy(
        arg1: *mut Fl_Output,
        clipboard: libc::c_int,
    ) -> libc::c_int;
}
extern "C" {
    pub fn Fl_Output_undo(arg1: *mut Fl_Output) -> libc::c_int;
}
extern "C" {
    pub fn Fl_Output_copy_cuts(arg1: *mut Fl_Output) -> libc::c_int;
}
extern "C" {
    pub fn Fl_Output_text_font(arg1: *mut Fl_Output) -> libc::c_int;
}
extern "C" {
    pub fn Fl_Output_set_text_font(arg1: *mut Fl_Output, s: libc::c_int);
}
extern "C" {
    pub fn Fl_Output_text_color(arg1: *mut Fl_Output) -> libc::c_int;
}
extern "C" {
    pub fn Fl_Output_set_text_color(arg1: *mut Fl_Output, s: libc::c_int);
}
extern "C" {
    pub fn Fl_Output_text_size(arg1: *mut Fl_Output) -> libc::c_int;
}
extern "C" {
    pub fn Fl_Output_set_text_size(arg1: *mut Fl_Output, s: libc::c_int);
}
extern "C" {
    pub fn Fl_Output_readonly(arg1: *mut Fl_Output) -> libc::c_int;
}
extern "C" {
    pub fn Fl_Output_set_readonly(arg1: *mut Fl_Output, boolean: libc::c_int);
}
extern "C" {
    pub fn Fl_Output_wrap(arg1: *mut Fl_Output) -> libc::c_int;
}
extern "C" {
    pub fn Fl_Output_set_wrap(arg1: *mut Fl_Output, boolean: libc::c_int);
}
