/* automatically generated by rust-bindgen */

#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct Fl_Widget {
    _unused: [u8; 0],
}
pub type Fl_Callback = ::std::option::Option<
    unsafe extern "C" fn(arg1: *mut Fl_Widget, arg2: *mut ::std::os::raw::c_void),
>;
pub type custom_handler_callback = ::std::option::Option<
    unsafe extern "C" fn(
        arg1: ::std::os::raw::c_int,
        arg2: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int,
>;
pub type custom_draw_callback =
    ::std::option::Option<unsafe extern "C" fn(arg1: *mut ::std::os::raw::c_void)>;
extern "C" {
    pub fn Fl_Widget_callback_with_captures(
        arg1: *mut Fl_Widget,
        cb: Fl_Callback,
        arg2: *mut ::std::os::raw::c_void,
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct Fl_Tree {
    _unused: [u8; 0],
}
extern "C" {
    pub fn Fl_Tree_new(
        x: ::std::os::raw::c_int,
        y: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
        title: *const ::std::os::raw::c_char,
    ) -> *mut Fl_Tree;
}
extern "C" {
    pub fn Fl_Tree_x(arg1: *mut Fl_Tree) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Tree_y(arg1: *mut Fl_Tree) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Tree_width(arg1: *mut Fl_Tree) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Tree_height(arg1: *mut Fl_Tree) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Tree_label(arg1: *mut Fl_Tree) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn Fl_Tree_set_label(arg1: *mut Fl_Tree, title: *const ::std::os::raw::c_char);
}
extern "C" {
    pub fn Fl_Tree_redraw(arg1: *mut Fl_Tree);
}
extern "C" {
    pub fn Fl_Tree_show(arg1: *mut Fl_Tree);
}
extern "C" {
    pub fn Fl_Tree_hide(arg1: *mut Fl_Tree);
}
extern "C" {
    pub fn Fl_Tree_activate(arg1: *mut Fl_Tree);
}
extern "C" {
    pub fn Fl_Tree_deactivate(arg1: *mut Fl_Tree);
}
extern "C" {
    pub fn Fl_Tree_redraw_label(arg1: *mut Fl_Tree);
}
extern "C" {
    pub fn Fl_Tree_resize(
        arg1: *mut Fl_Tree,
        x: ::std::os::raw::c_int,
        y: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fl_Tree_tooltip(arg1: *mut Fl_Tree) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn Fl_Tree_set_tooltip(arg1: *mut Fl_Tree, txt: *const ::std::os::raw::c_char);
}
extern "C" {
    pub fn Fl_Tree_get_type(arg1: *mut Fl_Tree) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Tree_set_type(arg1: *mut Fl_Tree, typ: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Tree_color(arg1: *mut Fl_Tree) -> ::std::os::raw::c_uint;
}
extern "C" {
    pub fn Fl_Tree_set_color(arg1: *mut Fl_Tree, color: ::std::os::raw::c_uint);
}
extern "C" {
    pub fn Fl_Tree_label_color(arg1: *mut Fl_Tree) -> ::std::os::raw::c_uint;
}
extern "C" {
    pub fn Fl_Tree_set_label_color(arg1: *mut Fl_Tree, color: ::std::os::raw::c_uint);
}
extern "C" {
    pub fn Fl_Tree_label_font(arg1: *mut Fl_Tree) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Tree_set_label_font(arg1: *mut Fl_Tree, font: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Tree_label_size(arg1: *mut Fl_Tree) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Tree_set_label_size(arg1: *mut Fl_Tree, sz: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Tree_label_type(arg1: *mut Fl_Tree) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Tree_set_label_type(arg1: *mut Fl_Tree, typ: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Tree_box(arg1: *mut Fl_Tree) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Tree_set_box(arg1: *mut Fl_Tree, typ: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Tree_changed(arg1: *mut Fl_Tree) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Tree_set_changed(arg1: *mut Fl_Tree);
}
extern "C" {
    pub fn Fl_Tree_clear_changed(arg1: *mut Fl_Tree);
}
extern "C" {
    pub fn Fl_Tree_align(arg1: *mut Fl_Tree) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Tree_set_align(arg1: *mut Fl_Tree, typ: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Tree_delete(arg1: *mut Fl_Tree);
}
extern "C" {
    pub fn Fl_Tree_set_image(arg1: *mut Fl_Tree, arg2: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn Fl_Tree_set_image_with_size(
        arg1: *mut Fl_Tree,
        arg2: *mut ::std::os::raw::c_void,
        arg3: ::std::os::raw::c_int,
        arg4: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fl_Tree_set_handler(
        self_: *mut Fl_Tree,
        cb: custom_handler_callback,
        data: *mut ::std::os::raw::c_void,
    );
}
extern "C" {
    pub fn Fl_Tree_set_draw(
        self_: *mut Fl_Tree,
        cb: custom_draw_callback,
        data: *mut ::std::os::raw::c_void,
    );
}
extern "C" {
    pub fn Fl_Tree_set_trigger(arg1: *mut Fl_Tree, arg2: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fl_Tree_image(arg1: *const Fl_Tree) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Tree_parent(self_: *const Fl_Tree) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Tree_selection_color(arg1: *mut Fl_Tree) -> ::std::os::raw::c_uint;
}
extern "C" {
    pub fn Fl_Tree_set_selection_color(arg1: *mut Fl_Tree, color: ::std::os::raw::c_uint);
}
extern "C" {
    pub fn Fl_Tree_do_callback(arg1: *mut Fl_Tree);
}
extern "C" {
    pub fn Fl_Tree_inside(
        self_: *const Fl_Tree,
        arg1: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Tree_window(arg1: *const Fl_Tree) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Tree_top_window(arg1: *const Fl_Tree) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fl_Tree_takes_events(arg1: *const Fl_Tree) -> ::std::os::raw::c_int;
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct Fl_Tree_Item {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct Fl_Tree_Item_Array {
    _unused: [u8; 0],
}
extern "C" {
    pub fn Fl_Tree_begin(self_: *mut Fl_Tree);
}
extern "C" {
    pub fn Fl_Tree_end(self_: *mut Fl_Tree);
}
extern "C" {
    pub fn show_self(self_: *mut Fl_Tree);
}
extern "C" {
    pub fn root_label(self_: *mut Fl_Tree, new_label: *const ::std::os::raw::c_char);
}
extern "C" {
    pub fn root(self_: *mut Fl_Tree) -> *mut Fl_Tree_Item;
}
extern "C" {
    pub fn set_root(self_: *mut Fl_Tree, newitem: *mut Fl_Tree_Item);
}
extern "C" {
    pub fn add(self_: *mut Fl_Tree, name: *const ::std::os::raw::c_char) -> *mut Fl_Tree_Item;
}
extern "C" {
    pub fn insert_above(
        self_: *mut Fl_Tree,
        above: *mut Fl_Tree_Item,
        name: *const ::std::os::raw::c_char,
    ) -> *mut Fl_Tree_Item;
}
extern "C" {
    pub fn insert(
        self_: *mut Fl_Tree,
        item: *mut Fl_Tree_Item,
        name: *const ::std::os::raw::c_char,
        pos: ::std::os::raw::c_int,
    ) -> *mut Fl_Tree_Item;
}
extern "C" {
    pub fn find_item(
        self_: *const Fl_Tree,
        path: *const ::std::os::raw::c_char,
    ) -> *const Fl_Tree_Item;
}
extern "C" {
    pub fn find_item_mut(
        self_: *mut Fl_Tree,
        path: *const ::std::os::raw::c_char,
    ) -> *mut Fl_Tree_Item;
}
extern "C" {
    pub fn Fl_Tree_remove(self_: *mut Fl_Tree, item: *mut Fl_Tree_Item) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn clear(self_: *mut Fl_Tree);
}
extern "C" {
    pub fn clear_children(self_: *mut Fl_Tree, item: *mut Fl_Tree_Item);
}
extern "C" {
    pub fn find_clicked(self_: *const Fl_Tree, yonly: ::std::os::raw::c_int)
        -> *const Fl_Tree_Item;
}
extern "C" {
    pub fn item_clicked(self_: *mut Fl_Tree) -> *mut Fl_Tree_Item;
}
extern "C" {
    pub fn first(self_: *mut Fl_Tree) -> *mut Fl_Tree_Item;
}
extern "C" {
    pub fn first_visible_item(self_: *mut Fl_Tree) -> *mut Fl_Tree_Item;
}
extern "C" {
    pub fn next(self_: *mut Fl_Tree, item: *mut Fl_Tree_Item) -> *mut Fl_Tree_Item;
}
extern "C" {
    pub fn prev(self_: *mut Fl_Tree, item: *mut Fl_Tree_Item) -> *mut Fl_Tree_Item;
}
extern "C" {
    pub fn last(self_: *mut Fl_Tree) -> *mut Fl_Tree_Item;
}
extern "C" {
    pub fn last_visible_item(self_: *mut Fl_Tree) -> *mut Fl_Tree_Item;
}
extern "C" {
    pub fn next_visible_item(
        self_: *mut Fl_Tree,
        start: *mut Fl_Tree_Item,
        dir: ::std::os::raw::c_int,
    ) -> *mut Fl_Tree_Item;
}
extern "C" {
    pub fn first_selected_item(self_: *mut Fl_Tree) -> *mut Fl_Tree_Item;
}
extern "C" {
    pub fn last_selected_item(self_: *mut Fl_Tree) -> *mut Fl_Tree_Item;
}
extern "C" {
    pub fn next_item(
        self_: *mut Fl_Tree,
        item: *mut Fl_Tree_Item,
        dir: ::std::os::raw::c_int,
        visible: ::std::os::raw::c_int,
    ) -> *mut Fl_Tree_Item;
}
extern "C" {
    pub fn next_selected_item(
        self_: *mut Fl_Tree,
        item: *mut Fl_Tree_Item,
        dir: ::std::os::raw::c_int,
    ) -> *mut Fl_Tree_Item;
}
extern "C" {
    pub fn get_selected_items(
        self_: *mut Fl_Tree,
        items: *mut *mut Fl_Tree_Item,
        cnt: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn open(
        self_: *mut Fl_Tree,
        path: *const ::std::os::raw::c_char,
        docallback: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn open_toggle(
        self_: *mut Fl_Tree,
        item: *mut Fl_Tree_Item,
        docallback: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn close(
        self_: *mut Fl_Tree,
        path: *const ::std::os::raw::c_char,
        docallback: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn is_open(
        self_: *const Fl_Tree,
        path: *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn is_close(
        self_: *const Fl_Tree,
        path: *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fl_Tree_select(
        self_: *mut Fl_Tree,
        path: *const ::std::os::raw::c_char,
        docallback: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn select_toggle(
        self_: *mut Fl_Tree,
        item: *mut Fl_Tree_Item,
        docallback: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn deselect(
        self_: *mut Fl_Tree,
        path: *const ::std::os::raw::c_char,
        docallback: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn deselect_all(
        self_: *mut Fl_Tree,
        item: *mut Fl_Tree_Item,
        docallback: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn select_only(
        self_: *mut Fl_Tree,
        selitem: *mut Fl_Tree_Item,
        docallback: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn select_all(
        self_: *mut Fl_Tree,
        item: *mut Fl_Tree_Item,
        docallback: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn extend_selection_dir(
        self_: *mut Fl_Tree,
        from: *mut Fl_Tree_Item,
        to: *mut Fl_Tree_Item,
        dir: ::std::os::raw::c_int,
        val: ::std::os::raw::c_int,
        visible: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn extend_selection(
        self_: *mut Fl_Tree,
        from: *mut Fl_Tree_Item,
        to: *mut Fl_Tree_Item,
        val: ::std::os::raw::c_int,
        visible: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn set_item_focus(self_: *mut Fl_Tree, item: *mut Fl_Tree_Item);
}
extern "C" {
    pub fn get_item_focus(self_: *const Fl_Tree) -> *mut Fl_Tree_Item;
}
extern "C" {
    pub fn is_selected(
        self_: *mut Fl_Tree,
        path: *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn item_labelfont(self_: *const Fl_Tree) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn set_item_labelfont(self_: *mut Fl_Tree, val: ::std::os::raw::c_int);
}
extern "C" {
    pub fn item_labelsize(self_: *const Fl_Tree) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn set_item_labelsize(self_: *mut Fl_Tree, val: ::std::os::raw::c_int);
}
extern "C" {
    pub fn item_labelfgcolor(self_: *const Fl_Tree) -> ::std::os::raw::c_uint;
}
extern "C" {
    pub fn set_item_labelfgcolor(self_: *mut Fl_Tree, val: ::std::os::raw::c_uint);
}
extern "C" {
    pub fn item_labelbgcolor(self_: *const Fl_Tree) -> ::std::os::raw::c_uint;
}
extern "C" {
    pub fn set_item_labelbgcolor(self_: *mut Fl_Tree, val: ::std::os::raw::c_uint);
}
extern "C" {
    pub fn connectorcolor(self_: *const Fl_Tree) -> ::std::os::raw::c_uint;
}
extern "C" {
    pub fn set_connectorcolor(self_: *mut Fl_Tree, val: ::std::os::raw::c_uint);
}
extern "C" {
    pub fn marginleft(self_: *const Fl_Tree) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn set_marginleft(self_: *mut Fl_Tree, val: ::std::os::raw::c_int);
}
extern "C" {
    pub fn margintop(self_: *const Fl_Tree) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn set_margintop(self_: *mut Fl_Tree, val: ::std::os::raw::c_int);
}
extern "C" {
    pub fn marginbottom(self_: *const Fl_Tree) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn set_marginbottom(self_: *mut Fl_Tree, val: ::std::os::raw::c_int);
}
extern "C" {
    pub fn linespacing(self_: *const Fl_Tree) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn set_linespacing(self_: *mut Fl_Tree, val: ::std::os::raw::c_int);
}
extern "C" {
    pub fn openchild_marginbottom(self_: *const Fl_Tree) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn set_openchild_marginbottom(self_: *mut Fl_Tree, val: ::std::os::raw::c_int);
}
extern "C" {
    pub fn usericonmarginleft(self_: *const Fl_Tree) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn set_usericonmarginleft(self_: *mut Fl_Tree, val: ::std::os::raw::c_int);
}
extern "C" {
    pub fn labelmarginleft(self_: *const Fl_Tree) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn set_labelmarginleft(self_: *mut Fl_Tree, val: ::std::os::raw::c_int);
}
extern "C" {
    pub fn widgetmarginleft(self_: *const Fl_Tree) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn set_widgetmarginleft(self_: *mut Fl_Tree, val: ::std::os::raw::c_int);
}
extern "C" {
    pub fn connectorwidth(self_: *const Fl_Tree) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn set_connectorwidth(self_: *mut Fl_Tree, val: ::std::os::raw::c_int);
}
extern "C" {
    pub fn usericon(self_: *const Fl_Tree) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn set_usericon(self_: *mut Fl_Tree, val: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn openicon(self_: *const Fl_Tree) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn set_openicon(self_: *mut Fl_Tree, val: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn closeicon(self_: *const Fl_Tree) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn set_closeicon(self_: *mut Fl_Tree, val: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn showcollapse(self_: *const Fl_Tree) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn set_showcollapse(self_: *mut Fl_Tree, val: ::std::os::raw::c_int);
}
extern "C" {
    pub fn showroot(self_: *const Fl_Tree) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn set_showroot(self_: *mut Fl_Tree, val: ::std::os::raw::c_int);
}
extern "C" {
    pub fn connectorstyle(self_: *const Fl_Tree) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn set_connectorstyle(self_: *mut Fl_Tree, val: ::std::os::raw::c_int);
}
extern "C" {
    pub fn sortorder(self_: *const Fl_Tree) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn set_sortorder(self_: *mut Fl_Tree, val: ::std::os::raw::c_int);
}
extern "C" {
    pub fn selectbox(self_: *const Fl_Tree) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn set_selectbox(self_: *mut Fl_Tree, val: ::std::os::raw::c_int);
}
extern "C" {
    pub fn selectmode(self_: *const Fl_Tree) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn set_selectmode(self_: *mut Fl_Tree, val: ::std::os::raw::c_int);
}
extern "C" {
    pub fn item_reselect_mode(self_: *const Fl_Tree) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn set_item_reselect_mode(self_: *mut Fl_Tree, mode: ::std::os::raw::c_int);
}
extern "C" {
    pub fn item_draw_mode(self_: *const Fl_Tree) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn set_item_draw_mode(self_: *mut Fl_Tree, mode: ::std::os::raw::c_int);
}
extern "C" {
    pub fn calc_dimensions(self_: *mut Fl_Tree);
}
extern "C" {
    pub fn calc_tree(self_: *mut Fl_Tree);
}
extern "C" {
    pub fn recalc_tree(self_: *mut Fl_Tree);
}
extern "C" {
    pub fn displayed(self_: *mut Fl_Tree, item: *mut Fl_Tree_Item) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn show_item(self_: *mut Fl_Tree, item: *mut Fl_Tree_Item, yoff: ::std::os::raw::c_int);
}
extern "C" {
    pub fn show_item_top(self_: *mut Fl_Tree, item: *mut Fl_Tree_Item);
}
extern "C" {
    pub fn show_item_middle(self_: *mut Fl_Tree, item: *mut Fl_Tree_Item);
}
extern "C" {
    pub fn show_item_bottom(self_: *mut Fl_Tree, item: *mut Fl_Tree_Item);
}
extern "C" {
    pub fn display(self_: *mut Fl_Tree, item: *mut Fl_Tree_Item);
}
extern "C" {
    pub fn vposition(self_: *const Fl_Tree) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn set_vposition(self_: *mut Fl_Tree, pos: ::std::os::raw::c_int);
}
extern "C" {
    pub fn hposition(self_: *const Fl_Tree) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn set_hposition(self_: *mut Fl_Tree, pos: ::std::os::raw::c_int);
}
extern "C" {
    pub fn is_scrollbar(self_: *mut Fl_Tree, w: *mut Fl_Widget) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn scrollbar_size(self_: *const Fl_Tree) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn set_scrollbar_size(self_: *mut Fl_Tree, size: ::std::os::raw::c_int);
}
extern "C" {
    pub fn is_vscroll_visible(self_: *const Fl_Tree) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn is_hscroll_visible(self_: *const Fl_Tree) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn set_callback_item(self_: *mut Fl_Tree, item: *mut Fl_Tree_Item);
}
extern "C" {
    pub fn callback_item(self_: *mut Fl_Tree) -> *mut Fl_Tree_Item;
}
extern "C" {
    pub fn set_callback_reason(self_: *mut Fl_Tree, reason: ::std::os::raw::c_int);
}
extern "C" {
    pub fn callback_reason(self_: *const Fl_Tree) -> ::std::os::raw::c_int;
}
