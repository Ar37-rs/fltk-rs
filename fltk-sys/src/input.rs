/* automatically generated by rust-bindgen */

#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct Fl_Input {
    _unused: [u8; 0],
}
extern "C" {
    pub fn Fl_Input_new(
        x: libc::c_int,
        y: libc::c_int,
        width: libc::c_int,
        height: libc::c_int,
        title: *const libc::c_char,
    ) -> *mut Fl_Input;
}
extern "C" {
    pub fn Fl_Input_set_label(arg1: *mut Fl_Input, title: *const libc::c_char);
}
extern "C" {
    pub fn Fl_Input_redraw(arg1: *mut Fl_Input);
}
extern "C" {
    pub fn Fl_Input_show(arg1: *mut Fl_Input);
}
extern "C" {
    pub fn Fl_Input_hide(arg1: *mut Fl_Input);
}
extern "C" {
    pub fn Fl_Input_activate(arg1: *mut Fl_Input);
}
extern "C" {
    pub fn Fl_Input_deactivate(arg1: *mut Fl_Input);
}
extern "C" {
    pub fn Fl_Input_redraw_label(arg1: *mut Fl_Input);
}
extern "C" {
    pub fn Fl_Input_resize(
        arg1: *mut Fl_Input,
        x: libc::c_int,
        y: libc::c_int,
        width: libc::c_int,
        height: libc::c_int,
    );
}
extern "C" {
    pub fn Fl_Input_tooltip(arg1: *mut Fl_Input) -> *const libc::c_char;
}
extern "C" {
    pub fn Fl_Input_set_tooltip(arg1: *mut Fl_Input, txt: *const libc::c_char);
}
extern "C" {
    pub fn Fl_Input_get_type(arg1: *mut Fl_Input) -> libc::c_int;
}
extern "C" {
    pub fn Fl_Input_set_type(arg1: *mut Fl_Input, typ: libc::c_int);
}
extern "C" {
    pub fn Fl_Input_color(arg1: *mut Fl_Input) -> libc::c_int;
}
extern "C" {
    pub fn Fl_Input_set_color(arg1: *mut Fl_Input, color: libc::c_int);
}
extern "C" {
    pub fn Fl_Input_label_color(arg1: *mut Fl_Input) -> libc::c_int;
}
extern "C" {
    pub fn Fl_Input_set_label_color(arg1: *mut Fl_Input, color: libc::c_int);
}
extern "C" {
    pub fn Fl_Input_label_font(arg1: *mut Fl_Input) -> libc::c_int;
}
extern "C" {
    pub fn Fl_Input_set_label_font(arg1: *mut Fl_Input, font: libc::c_int);
}
extern "C" {
    pub fn Fl_Input_label_size(arg1: *mut Fl_Input) -> libc::c_int;
}
extern "C" {
    pub fn Fl_Input_set_label_size(arg1: *mut Fl_Input, sz: libc::c_int);
}
extern "C" {
    pub fn Fl_Input_label_type(arg1: *mut Fl_Input) -> libc::c_int;
}
extern "C" {
    pub fn Fl_Input_set_label_type(arg1: *mut Fl_Input, typ: libc::c_int);
}
extern "C" {
    pub fn Fl_Input_box(arg1: *mut Fl_Input) -> libc::c_int;
}
extern "C" {
    pub fn Fl_Input_set_box(arg1: *mut Fl_Input, typ: libc::c_int);
}
extern "C" {
    pub fn Fl_Input_set_value(
        arg1: *mut Fl_Input,
        arg2: *const libc::c_char,
    ) -> libc::c_int;
}
extern "C" {
    pub fn Fl_Input_value(arg1: *mut Fl_Input) -> *const libc::c_char;
}
extern "C" {
    pub fn Fl_Input_maximum_size(arg1: *mut Fl_Input) -> libc::c_int;
}
extern "C" {
    pub fn Fl_Input_set_maximum_size(arg1: *mut Fl_Input, m: libc::c_int);
}
extern "C" {
    pub fn Fl_Input_position(
        arg1: *mut Fl_Input,
    ) -> libc::c_int;
}
extern "C" {
    pub fn Fl_Input_set_position(
        arg1: *mut Fl_Input,
        p: libc::c_int,
    ) -> libc::c_int;
}
extern "C" {
    pub fn Fl_Input_set_mark(arg1: *mut Fl_Input, m: libc::c_int) -> libc::c_int;
}
extern "C" {
    pub fn Fl_Input_mark(arg1: *mut Fl_Input) -> libc::c_int;
}
extern "C" {
    pub fn Fl_Input_replace(
        arg1: *mut Fl_Input,
        b: libc::c_int,
        e: libc::c_int,
        text: *const libc::c_char,
        ilen: libc::c_int,
    ) -> libc::c_int;
}
extern "C" {
    pub fn Fl_Input_insert(
        arg1: *mut Fl_Input,
        t: *const libc::c_char,
        l: libc::c_int,
    ) -> libc::c_int;
}
extern "C" {
    pub fn Fl_Input_append(
        arg1: *mut Fl_Input,
        t: *const libc::c_char,
        l: libc::c_int,
        keep_selection: libc::c_char,
    ) -> libc::c_int;
}
extern "C" {
    pub fn Fl_Input_copy(
        arg1: *mut Fl_Input,
        clipboard: libc::c_int,
    ) -> libc::c_int;
}
extern "C" {
    pub fn Fl_Input_undo(arg1: *mut Fl_Input) -> libc::c_int;
}
extern "C" {
    pub fn Fl_Input_copy_cuts(arg1: *mut Fl_Input) -> libc::c_int;
}
extern "C" {
    pub fn Fl_Input_text_font(arg1: *mut Fl_Input) -> libc::c_int;
}
extern "C" {
    pub fn Fl_Input_set_text_font(arg1: *mut Fl_Input, s: libc::c_int);
}
extern "C" {
    pub fn Fl_Input_text_color(arg1: *mut Fl_Input) -> libc::c_int;
}
extern "C" {
    pub fn Fl_Input_set_text_color(arg1: *mut Fl_Input, s: libc::c_int);
}
extern "C" {
    pub fn Fl_Input_text_size(arg1: *mut Fl_Input) -> libc::c_int;
}
extern "C" {
    pub fn Fl_Input_set_text_size(arg1: *mut Fl_Input, s: libc::c_int);
}
extern "C" {
    pub fn Fl_Input_readonly(arg1: *mut Fl_Input) -> libc::c_int;
}
extern "C" {
    pub fn Fl_Input_set_readonly(arg1: *mut Fl_Input, boolean: libc::c_int);
}
extern "C" {
    pub fn Fl_Input_wrap(arg1: *mut Fl_Input) -> libc::c_int;
}
extern "C" {
    pub fn Fl_Input_set_wrap(arg1: *mut Fl_Input, boolean: libc::c_int);
}
